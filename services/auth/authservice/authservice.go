// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: auth.proto

package authservice

import (
	"context"

	"auth/proto/AuthRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthenticationReq  = AuthRpc.AuthenticationReq
	AuthenticationResp = AuthRpc.AuthenticationResp
	CreateReq          = AuthRpc.CreateReq
	CreateResp         = AuthRpc.CreateResp
	RefreshReq         = AuthRpc.RefreshReq
	RefreshResp        = AuthRpc.RefreshResp

	AuthService interface {
		Authentication(ctx context.Context, in *AuthenticationReq, opts ...grpc.CallOption) (*AuthenticationResp, error)
		Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error)
		Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error)
	}

	defaultAuthService struct {
		cli zrpc.Client
	}
)

func NewAuthService(cli zrpc.Client) AuthService {
	return &defaultAuthService{
		cli: cli,
	}
}

func (m *defaultAuthService) Authentication(ctx context.Context, in *AuthenticationReq, opts ...grpc.CallOption) (*AuthenticationResp, error) {
	client := AuthRpc.NewAuthServiceClient(m.cli.Conn())
	return client.Authentication(ctx, in, opts...)
}

func (m *defaultAuthService) Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error) {
	client := AuthRpc.NewAuthServiceClient(m.cli.Conn())
	return client.Refresh(ctx, in, opts...)
}

func (m *defaultAuthService) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateResp, error) {
	client := AuthRpc.NewAuthServiceClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}
