// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: feed.proto

package feedservice

import (
	"context"

	"fansX/services/feed/proto/feedRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	PullLatestReq = feedRpc.PullLatestReq
	PullReq       = feedRpc.PullReq
	PullResp      = feedRpc.PullResp

	FeedService interface {
		PullLatest(ctx context.Context, in *PullLatestReq, opts ...grpc.CallOption) (*PullResp, error)
		Pull(ctx context.Context, in *PullReq, opts ...grpc.CallOption) (*PullResp, error)
	}

	defaultFeedService struct {
		cli zrpc.Client
	}
)

func NewFeedService(cli zrpc.Client) FeedService {
	return &defaultFeedService{
		cli: cli,
	}
}

func (m *defaultFeedService) PullLatest(ctx context.Context, in *PullLatestReq, opts ...grpc.CallOption) (*PullResp, error) {
	client := feedRpc.NewFeedServiceClient(m.cli.Conn())
	return client.PullLatest(ctx, in, opts...)
}

func (m *defaultFeedService) Pull(ctx context.Context, in *PullReq, opts ...grpc.CallOption) (*PullResp, error) {
	client := feedRpc.NewFeedServiceClient(m.cli.Conn())
	return client.Pull(ctx, in, opts...)
}
